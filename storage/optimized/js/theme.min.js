class ThemeController{constructor(){this.themeToggle=document.getElementById("theme-toggle"),this.prefersDarkScheme=window.matchMedia("(prefers-color-scheme: dark)"),this.themes={LIGHT:"light",DARK:"dark"},this.init()}init(){this.themeToggle?(this.setupInitialTheme(),this.setupEventListeners(),console.debug("[ThemeController] Initialized")):console.warn("[ThemeController] Theme toggle button not found")}setupInitialTheme(){const e=this.getSavedTheme(),t=this.getSystemTheme(),h=e||t;this.applyTheme(h)}setupEventListeners(){this.themeToggle.addEventListener("click",(()=>{const e=this.getCurrentTheme()===this.themes.LIGHT?this.themes.DARK:this.themes.LIGHT;this.applyTheme(e),this.saveTheme(e),console.debug(`[ThemeController] Theme toggled to ${e}`)})),this.prefersDarkScheme.addEventListener("change",(e=>{if(!this.getSavedTheme()){const t=e.matches?this.themes.DARK:this.themes.LIGHT;this.applyTheme(t),console.debug(`[ThemeController] System theme changed to ${t}`)}}))}applyTheme(e){e===this.themes.LIGHT?document.documentElement.setAttribute("data-theme","light"):document.documentElement.removeAttribute("data-theme"),this.updateThemeIcon(e),this.updateAriaLabel(e)}updateThemeIcon(e){const t=this.themeToggle.querySelector("i");t&&(e===this.themes.LIGHT?t.className="fas fa-moon":t.className="fas fa-sun")}updateAriaLabel(e){const t=e===this.themes.LIGHT?"Switch to dark theme":"Switch to light theme";this.themeToggle.setAttribute("aria-label",t),this.themeToggle.setAttribute("aria-pressed","false")}getCurrentTheme(){return document.documentElement.hasAttribute("data-theme")?this.themes.LIGHT:this.themes.DARK}getSavedTheme(){try{return localStorage.getItem("theme")}catch(e){return console.warn("[ThemeController] Could not access localStorage:",e),null}}saveTheme(e){try{localStorage.setItem("theme",e)}catch(e){console.warn("[ThemeController] Could not save to localStorage:",e)}}getSystemTheme(){return this.prefersDarkScheme.matches?this.themes.DARK:this.themes.LIGHT}setTheme(e){Object.values(this.themes).includes(e)?(this.applyTheme(e),this.saveTheme(e)):console.warn(`[ThemeController] Invalid theme: ${e}`)}toggleTheme(){const e=this.getCurrentTheme()===this.themes.LIGHT?this.themes.DARK:this.themes.LIGHT;this.setTheme(e)}}
//# sourceMappingURL=theme.min.js.map