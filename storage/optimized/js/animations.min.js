class AnimationController{constructor(){this.observerOptions={threshold:.1,rootMargin:"0px 0px -50px 0px"},this.skillObserverOptions={threshold:.5,rootMargin:"0px"},this.observers=new Map,this.init()}init(){this.setupScrollAnimations(),this.setupSkillBars(),this.setupTypewriter(),this.setupParallax(),this.setupImageLazyLoading(),console.debug("[AnimationController] Initialized")}setupScrollAnimations(){const e=new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting&&(t.target.classList.add("animated"),e.unobserve(t.target))}))}),this.observerOptions);this.addAnimationClasses(),document.querySelectorAll(".animate-on-scroll").forEach((t=>{e.observe(t)})),this.observers.set("scroll",e)}addAnimationClasses(){[".hero__text > *",".about__intro",".detail-item",".skill-item",".project-card",".timeline-item",".contact-item"].forEach((e=>{document.querySelectorAll(e).forEach((e=>{e.classList.add("animate-on-scroll")}))}))}setupSkillBars(){const e=document.querySelectorAll(".skill-bar");if(!e.length)return;const t=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&(this.animateSkillBar(e.target),t.unobserve(e.target))}))}),this.skillObserverOptions);e.forEach((e=>{e.style.width="0%",t.observe(e)})),this.observers.set("skills",t)}animateSkillBar(e){const t=e.closest(".skill-item"),o=t?.getAttribute("data-level")||"0";setTimeout((()=>{e.style.transition="width 1.5s cubic-bezier(0.4, 0, 0.2, 1)",e.style.width=o+"%",setTimeout((()=>{e.style.boxShadow="0 0 20px rgba(var(--primary-color-rgb), 0.5)",setTimeout((()=>{e.style.boxShadow=""}),500)}),1500),console.debug(`[AnimationController] Skill bar animated to ${o}%`)}),200)}setupTypewriter(){const e=document.querySelector(".hero__role");if(!e)return;const t=["Full Stack Software Engineer","Frontend Developer","Backend Developer","Problem Solver","Tech Enthusiast"];let o=0,i=0,s=!1;const r=()=>{const n=t[o];s?(e.textContent=n.substring(0,i-1),i--):(e.textContent=n.substring(0,i+1),i++),s||i!==n.length?s&&0===i&&(s=!1,o=(o+1)%t.length):setTimeout((()=>s=!0),2e3);setTimeout(r,s?50:100)};e.style.borderRight="2px solid var(--primary-color)",e.style.animation="blink 1s infinite",setTimeout(r,1e3),console.debug("[AnimationController] Typewriter effect initialized")}setupParallax(){const e=document.querySelectorAll(".floating-shapes .shape");if(!e.length)return;let t=!1;const o=()=>{const o=window.pageYOffset,i=-.5*o;e.forEach(((e,t)=>{const s=i*(.1*(t+1)),r=.02*o;e.style.transform=`translateY(${s}px) rotate(${r}deg)`})),t=!1};window.addEventListener("scroll",(()=>{t||(requestAnimationFrame(o),t=!0)})),console.debug("[AnimationController] Parallax effect initialized")}setupImageLazyLoading(){const e=document.querySelectorAll("img[data-src]");if(!e.length)return;const t=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&(this.loadImage(e.target),t.unobserve(e.target))}))}),this.observerOptions);e.forEach((e=>{e.classList.add("lazy"),t.observe(e)})),this.observers.set("images",t)}loadImage(e){e.src=e.dataset.src,e.addEventListener("load",(()=>{e.classList.remove("lazy"),e.classList.add("loaded")})),e.addEventListener("error",(()=>{e.classList.add("error")}))}handleScroll(){}handleResize(){document.querySelectorAll(".floating-shapes .shape").length}showNotification(e,t="info"){const o=document.createElement("div");o.className=`notification notification--${t}`,o.innerHTML=`\n            <div class="notification__content">\n                <span>${e}</span>\n                <button class="notification__close" aria-label="Close notification">\n                    <i class="fas fa-times"></i>\n                </button>\n            </div>\n        `,Object.assign(o.style,{position:"fixed",top:"20px",right:"20px",padding:"16px 20px",borderRadius:"8px",color:"white",fontWeight:"500",zIndex:"9999",transform:"translateX(100%)",opacity:"0",transition:"all 0.3s ease-out",maxWidth:"400px",wordWrap:"break-word",backgroundColor:this.getNotificationColor(t)}),document.body.appendChild(o),requestAnimationFrame((()=>{o.style.transform="translateX(0)",o.style.opacity="1"}));return o.querySelector(".notification__close").addEventListener("click",(()=>this.hideNotification(o))),setTimeout((()=>this.hideNotification(o)),5e3),o}hideNotification(e){e.parentNode&&(e.style.transform="translateX(100%)",e.style.opacity="0",setTimeout((()=>{e.parentNode&&e.parentNode.removeChild(e)}),300))}getNotificationColor(e){const t={success:"#10b981",error:"#ef4444",warning:"#f59e0b",info:"#3b82f6"};return t[e]||t.info}destroy(){this.observers.forEach((e=>e.disconnect())),this.observers.clear()}}
//# sourceMappingURL=animations.min.js.map