class ViewportHandler{constructor(){this.hero=document.querySelector(".hero"),this.scrollIndicator=document.querySelector(".scroll-indicator"),this.aboutSection=document.getElementById("about"),this.header=document.querySelector("header"),this.progressBar=null,this.init()}init(){this.setupHeroSizing(),this.setupScrollIndicator(),this.setupScrollProgress(),this.setupEventListeners(),console.debug("[ViewportHandler] Initialized")}setupHeroSizing(){this.hero&&(this.adjustViewportHeight(),this.aboutSection&&(this.aboutSection.style.marginTop="0"))}setupScrollIndicator(){this.scrollIndicator&&this.aboutSection&&(this.scrollIndicator.addEventListener("click",(()=>{this.aboutSection.scrollIntoView({behavior:"smooth"})})),this.scrollIndicator.addEventListener("keydown",(t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),this.aboutSection.scrollIntoView({behavior:"smooth"}))})),this.scrollIndicator.setAttribute("tabindex","0"),this.scrollIndicator.setAttribute("role","button"),this.scrollIndicator.setAttribute("aria-label","Scroll to about section"))}setupScrollProgress(){this.progressBar=document.createElement("div"),this.progressBar.className="scroll-progress",Object.assign(this.progressBar.style,{position:"fixed",top:"0",left:"0",width:"0%",height:"3px",background:"linear-gradient(90deg, var(--primary-color), var(--secondary-color))",zIndex:"9999",transition:"width 0.1s ease-out",transformOrigin:"left"}),document.body.appendChild(this.progressBar)}setupEventListeners(){window.addEventListener("resize",(()=>this.handleResize())),window.addEventListener("scroll",(()=>this.handleScroll())),window.addEventListener("orientationchange",(()=>{setTimeout((()=>this.adjustViewportHeight()),200)}))}adjustViewportHeight(){if(!this.hero||!this.header)return;const t=window.innerHeight,e=t-this.header.offsetHeight;this.hero.style.height=`${e}px`,this.hero.style.minHeight=`${e}px`,document.documentElement.style.setProperty("--viewport-height",`${t}px`),document.documentElement.style.setProperty("--hero-height",`${e}px`)}handleResize(){this.adjustViewportHeight()}handleScroll(){const t=window.scrollY;this.updateScrollIndicator(t),this.updateScrollProgress()}updateScrollIndicator(t){if(!this.scrollIndicator)return;let e=1;t>50&&(e=Math.max(0,1-(t-50)/150)),this.scrollIndicator.style.opacity=e,this.scrollIndicator.style.pointerEvents=t>300?"none":"auto"}updateScrollProgress(){if(!this.progressBar)return;const t=window.scrollY,e=document.body.scrollHeight-window.innerHeight,i=Math.min(t/e*100,100);this.progressBar.style.width=`${i}%`,this.progressBar.style.boxShadow=i>=99?"0 0 10px var(--primary-color)":"none"}getViewportInfo(){return{width:window.innerWidth,height:window.innerHeight,scrollY:window.scrollY,scrollHeight:document.body.scrollHeight,isMobile:window.innerWidth<768,isTablet:window.innerWidth>=768&&window.innerWidth<1024,isDesktop:window.innerWidth>=1024}}isInViewport(t,e=0){if(!t)return!1;const i=t.getBoundingClientRect(),o=window.innerHeight,n=window.innerWidth;return i.top>=-e&&i.left>=-e&&i.bottom<=o+e&&i.right<=n+e}scrollToElement(t,e=0){if(!t)return;const i=t.getBoundingClientRect().top+window.scrollY-e;window.scrollTo({top:i,behavior:"smooth"})}handleVisibilityChange(t){t&&setTimeout((()=>this.adjustViewportHeight()),100)}addResponsiveCSS(){if(document.querySelector("#viewport-styles"))return;const t=document.createElement("style");t.id="viewport-styles",t.textContent="\n            .scroll-progress {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 0%;\n                height: 3px;\n                background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n                z-index: 9999;\n                transition: width 0.1s ease-out;\n                transform-origin: left;\n            }\n            \n            @supports (height: 100dvh) {\n                .hero {\n                    height: 100dvh !important;\n                    min-height: 100dvh !important;\n                }\n            }\n            \n            @supports (height: 100svh) {\n                .hero {\n                    height: 100svh !important;\n                    min-height: 100svh !important;\n                }\n            }\n            \n            /* Mobile viewport fixes */\n            @media (max-width: 767px) {\n                .hero {\n                    height: calc(100vh - var(--header-height, 80px)) !important;\n                    min-height: calc(100vh - var(--header-height, 80px)) !important;\n                }\n            }\n            \n            /* Landscape mobile */\n            @media (max-height: 500px) and (orientation: landscape) {\n                .hero {\n                    height: 100vh !important;\n                    min-height: 100vh !important;\n                }\n                \n                .scroll-indicator {\n                    bottom: 10px;\n                }\n            }\n        ",document.head.appendChild(t)}destroy(){window.removeEventListener("resize",this.handleResize),window.removeEventListener("scroll",this.handleScroll),window.removeEventListener("orientationchange",this.adjustViewportHeight),this.progressBar&&this.progressBar.parentNode&&this.progressBar.parentNode.removeChild(this.progressBar);const t=document.getElementById("viewport-styles");t&&t.remove()}}document.addEventListener("DOMContentLoaded",(()=>{window.viewportHandler=new ViewportHandler}));
//# sourceMappingURL=viewport.min.js.map