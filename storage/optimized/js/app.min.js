class PortfolioApp{constructor(){this.config={apiBaseUrl:"./src/api",animationDelay:100,testimonialAutoSlideInterval:8e3,debounceDelay:250,throttleDelay:16},this.modules=new Map,this.isInitialized=!1,this.init()}async init(){try{document.addEventListener("DOMContentLoaded",(()=>this.onDOMContentLoaded())),console.debug("[PortfolioApp] Application initialized")}catch(e){console.error("[PortfolioApp] Initialization failed:",e)}}async onDOMContentLoaded(){try{await this.initModules(),this.setupGlobalEventListeners(),this.isInitialized=!0,console.debug("[PortfolioApp] DOM loaded - All modules initialized")}catch(e){console.error("[PortfolioApp] DOM initialization failed:",e)}}async initModules(){const e=[this.initModule("navigation",(()=>new NavigationController)),this.initModule("theme",(()=>new ThemeController)),this.initModule("hero",(()=>new HeroController)),this.initModule("animations",(()=>new AnimationController)),this.initModule("projects",(()=>new ProjectController)),this.initModule("contact",(()=>new ContactController(this.config.apiBaseUrl))),this.initModule("testimonials",(()=>new TestimonialController(this.config.apiBaseUrl,this.config.testimonialAutoSlideInterval))),this.initModule("mobile",(()=>new MobileController))];await Promise.allSettled(e)}async initModule(e,i){try{const o=i();this.modules.set(e,o),console.debug(`[PortfolioApp] Module '${e}' initialized`)}catch(i){console.error(`[PortfolioApp] Failed to initialize module '${e}':`,i)}}setupGlobalEventListeners(){window.addEventListener("error",this.handleGlobalError.bind(this)),window.addEventListener("unhandledrejection",this.handleUnhandledRejection.bind(this)),window.addEventListener("resize",this.debounce(this.handleResize.bind(this),this.config.debounceDelay)),window.addEventListener("scroll",this.throttle(this.handleScroll.bind(this),this.config.throttleDelay)),document.addEventListener("visibilitychange",this.handleVisibilityChange.bind(this)),window.addEventListener("load",this.handleWindowLoad.bind(this))}handleGlobalError(e){console.error("[PortfolioApp] Global error:",e.error)}handleUnhandledRejection(e){console.error("[PortfolioApp] Unhandled promise rejection:",e.reason),e.preventDefault()}handleResize(){this.modules.forEach(((e,i)=>{if("function"==typeof e.handleResize)try{e.handleResize()}catch(e){console.error(`[PortfolioApp] Resize handler failed for ${i}:`,e)}}))}handleScroll(){this.modules.forEach(((e,i)=>{if("function"==typeof e.handleScroll)try{e.handleScroll()}catch(e){console.error(`[PortfolioApp] Scroll handler failed for ${i}:`,e)}}))}handleVisibilityChange(){const e=!document.hidden;this.modules.forEach(((i,o)=>{if("function"==typeof i.handleVisibilityChange)try{i.handleVisibilityChange(e)}catch(e){console.error(`[PortfolioApp] Visibility handler failed for ${o}:`,e)}}))}handleWindowLoad(){const e=document.querySelector(".loading-screen");e&&(e.style.opacity="0",setTimeout((()=>e.remove()),500)),document.body.classList.add("loaded"),console.debug("[PortfolioApp] Window loaded - Loading screen removed")}debounce(e,i){let o;return function(...t){clearTimeout(o),o=setTimeout((()=>{clearTimeout(o),e(...t)}),i)}}throttle(e,i){let o;return function(...t){o||(e.apply(this,t),o=!0,setTimeout((()=>o=!1),i))}}getModule(e){return this.modules.get(e)}isReady(){return this.isInitialized}}window.portfolioApp=new PortfolioApp;
//# sourceMappingURL=app.min.js.map