# Nginx Configuration for brahim-elhouss.me
# Optimized for Cloudflare proxy with enhanced security and performance
# HTTPS-only configuration with local SSL certificates
# Author: Brahim El Houss
# Date: 2025

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=contact:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=uploads:10m rate=10r/m;
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# WebP mapping
map $http_accept $webp_suffix {
    "~*webp" ".webp";
}

# HTTP redirect server block (for Cloudflare Flexible mode)
server {
    listen 80;
    listen [::]:80;
    server_name brahim-elhouss.me www.brahim-elhouss.me;
    
    # Document root (same as HTTPS for static files)
    root /var/www/brahim/html/portfolio;
    index index.html index.php;
    
    # Basic rate limiting for HTTP
    limit_req zone=general burst=20 nodelay;
    
    # Handle all requests the same as HTTPS (for Cloudflare Flexible mode)
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # PHP processing for HTTP (needed for Cloudflare Flexible)
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS off;
    }
    
    # API endpoints
    location ^~ /api/ {
        limit_req zone=api burst=10 nodelay;
        try_files $uri $uri/ /api/index.php?$query_string;
    }
    
    # Contact form
    location ^~ /contact {
        limit_req zone=contact burst=3 nodelay;
        try_files $uri $uri/ /contact.php?$query_string;
    }
    
    # Admin area
    location ^~ /admin/ {
        limit_req zone=api burst=5 nodelay;
        try_files $uri $uri/ /admin/index.php?$query_string;
    }
    
    # Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|svg|woff|woff2|ttf|eot)$ {
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|sql|sqlite|bak|backup|log|ini|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Health check
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Logging
    access_log /var/log/nginx/brahim-elhouss.me.access.log combined;
    error_log /var/log/nginx/brahim-elhouss.me.error.log warn;
}

# Main HTTPS server block (accepts both www and non-www)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name brahim-elhouss.me www.brahim-elhouss.me;
    
    # Document root
    root /var/www/html/brahim/portfolio;
    index index.html index.php;
    
    # Charset
    charset utf-8;
    
    # SSL Configuration
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/brahim-elhouss.me/brahim-elhouss.me-fullchain.crt;
    ssl_certificate_key /etc/ssl/private/brahim-elhouss.me/brahim-elhouss.me.key;
    ssl_dhparam /etc/ssl/certs/brahim-elhouss.me/dhparam.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    # ssl_stapling on;
    # ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/brahim-elhouss.me/brahim-elhouss.me-fullchain.crt;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers (Enhanced for Cloudflare)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
    
    # Content Security Policy (Adjusted for portfolio needs)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: https: blob:; media-src 'self' data: https:; object-src 'none'; frame-src 'none'; connect-src 'self' https:; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests;" always;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn conn_limit_per_ip 10;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/woff
        font/woff2;
    
    # Brotli compression (disabled, module not available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types
    #     text/plain
    #     text/css
    #     text/xml
    #     text/javascript
    #     application/javascript
    #     application/xml+rss
    #     application/json
    #     application/xml
    #     image/svg+xml;
    
    # Cache control
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # WebP support
        location ~* \.(png|jpe?g)$ {
            add_header Vary "Accept";
            try_files $uri$webp_suffix $uri =404;
        }
    }
    
    # Main location block
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Cache static files (moved outside main location)
    location ~* \.(css|js|json|xml|txt)$ {
        expires 1d;
        add_header Cache-Control "public, no-transform";
    }
    
    # Fallback for SPA routing or PHP
    location @fallback {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP processing
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Security for PHP
        fastcgi_hide_header X-Powered-By;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
    }
    
    # API endpoints with enhanced rate limiting
    location ^~ /api/ {
        limit_req zone=api burst=10 nodelay;
        
        try_files $uri $uri/ /api/index.php?$query_string;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://brahim-elhouss.me" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Max-Age "86400" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # Contact form with stricter rate limiting
    location ^~ /contact {
        limit_req zone=contact burst=3 nodelay;
        try_files $uri $uri/ /contact.php?$query_string;
    }
    
    # Admin area protection
    location ^~ /admin/ {
        limit_req zone=api burst=5 nodelay;
        
        # IP whitelist (add your IPs)
        # allow 192.168.1.0/24;  # Local network
        # allow YOUR_IP_HERE;    # Your specific IP
        # deny all;
        
        try_files $uri $uri/ /admin/index.php?$query_string;
        
        # Additional security headers for admin
        add_header X-Frame-Options DENY always;
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
    }
    
    # Upload handling with security
    location ^~ /uploads/ {
        limit_req zone=uploads burst=5 nodelay;
        
        # Prevent execution of uploaded files
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
        
        # Set appropriate headers for uploads
        add_header X-Content-Type-Options nosniff always;
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|sql|sqlite|bak|backup|log|ini|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to composer files
    location ~* ^/(composer\.(json|lock)|package\.(json|lock)|yarn\.lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~* /(wp-|wordpress|admin|login|xmlrpc) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # robots.txt and sitemap.xml
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    location = /sitemap.xml {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }
    
    # Logging
    access_log /var/log/nginx/brahim-elhouss.me.access.log combined buffer=16k flush=2m;
    error_log /var/log/nginx/brahim-elhouss.me.error.log warn;
    
    # ...existing code...
}
